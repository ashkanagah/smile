name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python & Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make gcc g++ python3-dev libgl1 wget unzip
        pip install --upgrade pip
        pip install cython buildozer

    - name: Install Android SDK & AIDL
      run: |
        mkdir -p $HOME/Android/Sdk/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
        unzip -q commandlinetools-linux-10406996_latest.zip -d $HOME/Android/Sdk/cmdline-tools/
        mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest
        yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;30.0.3"

    - name: Set up Android SDK paths
      run: |
        echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/Android/Sdk/platform-tools:$HOME/Android/Sdk/build-tools/30.0.3" >> $GITHUB_ENV

    - name: Check if AIDL exists
      run: |
        ls -la $HOME/Android/Sdk/build-tools/30.0.3/
        if [ -f "$HOME/Android/Sdk/build-tools/30.0.3/aidl" ]; then
          echo "AIDL installed successfully"
        else
          echo "AIDL still missing! Exiting..."
          exit 1
        fi

    - name: Build APK
      run: buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: MyApp.apk
        path: ./bin/*.apk
